AWSTemplateFormatVersion: "2010-09-09"

Description: Create a variable number of EC2 instance resources.

Parameters:

  InstanceName:
    Description: Name of EC2 instance
    Type: String
    ConstraintDescription: must be a valid EC2 instance string name.
    Default: modev

  InstanceType:
    Description: Basic EC2 instance type
    Type: String
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - t3.medium
    Default: t3.medium
    ConstraintDescription: must be a valid EC2 instance type.

  ImageId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  VpcId:
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    Type: String

  SubnetId:
    Description: SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
    Type: String

Mappings: {}

Resources:
  EC2SSMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: ["ec2.amazonaws.com"]
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref EC2SSMRole
  EC2Instance:
    # CreationPolicy:
    #   ResourceSignal:
    #     Timeout: PT240M
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init: {}
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      # SubnetId: !Ref SubnetId
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true" # internet access required for ssm
        DeviceIndex: "0"
        GroupSet: 
          - !Ref SecurityGroup
        SubnetId: !Ref SubnetId
      # SecurityGroupIds:
      #   - !Ref SecurityGroup
      # KeyName: !Ref KeyName
      Tags:
        - Key: project
          Value: modev
        - Key: Name
          Value: !Ref InstanceName
      Monitoring: false
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -xe
          echo "entering userdata"
          sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
          sudo start amazon-ssm-agent
          sudo systemctl enable amazon-ssm-agent
          sudo systemctl status amazon-ssm-agent

          # /usr/local/bin/cfn-signal -s true --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable HTTP access via port 80/22/443 and ICMP access via port *
      # SecurityGroupIngress:
      # - IpProtocol: tcp
      #   FromPort: "80"
      #   ToPort: "80"
      #   CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp
      #   FromPort: "8888"
      #   ToPort: "8888"
      #   CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp
      #   FromPort: "443"
      #   ToPort: "443"
      #   CidrIp: 0.0.0.0/0
      # - IpProtocol: icmp
      #   FromPort: "-1"
      #   ToPort: "-1"
      #   CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp
      #   FromPort: "22"
      #   ToPort: "22"
      #   CidrIp: !Ref SSHLocation

Outputs:
  InstanceId:
    Description: Instance Id of newly created instance
    Value: !Ref EC2Instance
